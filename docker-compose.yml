services:
  frontend:
    image: tp-frontend:latest
    env_file:
      - .env
    ports:
      - 3000:3000
    networks:
      - ticket-plus
    depends_on:
      - backend

  backend:
    image: tp-backend:latest
    env_file:
      - .env
    links:
      - postgres
    ports:
      - 3030:3030
    networks:
      - ticket-plus
    depends_on:
      - postgres
    restart: always

  postgres:
    image: postgres:16.3
    container_name: postgres
    restart: always
    volumes:
      - /database:/var/lib/postgresql/data
    env_file:
      - .env
    networks:
      - ticket-plus
    ports:
      - 5432:5432

  adminer:
    image: adminer:4.8.1
    container_name: adminer
    ports:
      - 8080:8080
    env_file:
      - .env
    networks:
      - ticket-plus

  webserver:
    image: nginx:1.27.0-alpine
    container_name: webserver
    restart: unless-stopped
    depends_on:
      - frontend
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./webserver/nginx/app.conf:/etc/nginx/conf.d/app.conf:ro
      - ./webserver/certbot/conf:/etc/letsencrypt
      - ./webserver/certbot/www:/var/www/certbot
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
    networks:
      - ticket-plus

  ssl:
    image: certbot/certbot:v2.10.0
    container_name: ssl
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./webserver/certbot/conf:/etc/letsencrypt
      - ./webserver/certbot/www:/var/www/certbot
    networks:
    - ticket-plus

networks:
  ticket-plus:
    driver: bridge
